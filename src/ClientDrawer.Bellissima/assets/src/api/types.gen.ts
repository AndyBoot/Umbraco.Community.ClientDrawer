// This file is auto-generated by @hey-api/openapi-ts

export type AssemblyModel = {
    name?: string | null;
    version?: string | null;
};

export type Change = {
    text: string | null;
    link?: string | null;
};

export type DataModel = {
    heading: string;
    primaryAssembly?: AssemblyModel | null;
    environments?: Array<(EnvironmentModel)> | null;
    changeLog: Array<(LogEntry)>;
    systemInformation: SystemInformationModel;
};

export type EnvironmentModel = {
    name: string;
    primaryUrl: string;
    umbracoUrl: string;
    disableUmbracoUrl: boolean;
    isCurrent: boolean;
    iconClass: string;
};

export type HeaderActionModel = {
    clientName: string;
    iconClass: string;
    iconImageFilePath?: string | null;
    iconSVG?: string | null;
    headerButtonMode: string;
    currentEnvironmentName?: string | null;
};

export type LogEntry = {
    date: string;
    changes?: Array<(Change)> | null;
    readonly formattedDate?: string | null;
    readonly friendlyDatePeriod?: string | null;
};

export type SystemInformationModel = {
    enabled: boolean;
    assemblies: Array<(AssemblyModel)>;
};

export type GetUmbracoClientdrawerApiV1GetdataResponse = DataModel;

export type GetUmbracoClientdrawerApiV1GetheaderactiondataResponse = HeaderActionModel;

export type $OpenApiTs = {
    '/umbraco/clientdrawer/api/v1/getdata': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: DataModel;
                /**
                 * The resource is protected and requires an authentication token
                 */
                401: unknown;
            };
        };
    };
    '/umbraco/clientdrawer/api/v1/getheaderactiondata': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: HeaderActionModel;
                /**
                 * The resource is protected and requires an authentication token
                 */
                401: unknown;
            };
        };
    };
};